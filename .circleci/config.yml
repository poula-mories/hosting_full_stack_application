version: 2.1

orbs:
  aws-elastic-beanstalk: circleci/aws-elastic-beanstalk@2.0.1

commands:
  install_aws: # Installs AWS CLI
    steps:
      - run: curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" 
      - run: unzip awscliv2.zip
      - run: sudo ./aws/install
        
jobs:
  install:
    docker: 
      - image: cimg/node:16.13.1
    steps:
      - checkout
      - run: npm i
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
            - package.json
            - udagram/*
  build:
    docker:
      - image: cimg/node:16.13.1
    steps:
      - attach_workspace:
          at: .
      - run: npm run build # Builds front-end & api
      - persist_to_workspace:
          root: .
          paths:
            - node_modules/*
            - package.json
            - udagram/*
  deploy:
    docker:
      - image: cimg/node:16.13.1
    steps:
      - attach_workspace:
          at: .
      - aws-elastic-beanstalk/setup # Sets up EB CLI
      - install_aws # Install AWS CLI to deploy frontend to S3
      - run:
          name: Prepare api for deployment
          command: |
            cd udagram/udagram-api
            eb init udagram -r us-east-1 -p node.js
            eb setenv \
            AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
            AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
            ENV=dev \
            POSTGRES_USERNAME=postgres \
            POSTGRES_PASSWORD=postgres \
            POSTGRES_DB=udagram \
            DB_PORT=5432 \
            PORT=8080 \
            POSTGRES_HOST=database-1.csym0lxssps3.us-east-1.rds.amazonaws.com \
            dialect=postgres \
            AWS_REGION=$AWS_REGION \
            AWS_PROFILE="" \
            AWS_BUCKET=s3://poulaudagrambucket1234/ \
            URL="" \
            JWT_SECRET=""
      - run: npm run deploy # Deploys frontend & api



workflows:
  build_and_deploy:
    jobs:
      - install
      - build:
          requires:
          - install
          context: udagram_context
      - deploy:
          requires:
            - build 
          context: udagram_context
